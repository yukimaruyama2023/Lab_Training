1-29
zsh: segmentation fault  ./a.out
と表示され、プロセスが停止した。

1-30
^Cでプログラムが中断されないことを確認できた。

1-31
他のターミナルからkillコマンドを使い、SIGSEGVといったSIGINT以外のプロセスを終了させる
シグナルを送る。

1-34
pipe: Hello!
と出力されたので、pipeによりpipefds[1]でオープンされたファイルに書き出されたデータがpipefds[0]から読み出すことができた。

1-35
child:␣hello␣from␣parent!
と標準出力され、パイプによりプロセス間で通信できることを確認できた。



2-1
実行結果：
w:␣0x1027c8000
x:␣0x1027c8008
y:␣0x1027c8010
z:␣0x1027c8014

考察：
double型が8バイト、float型が4バイトと推測できる。

2-2
実行結果；
x␣=␣10,␣*xp␣=␣10,␣y␣=␣20,␣*yp␣=␣20
x␣=␣10,␣*xp␣=␣30,␣y␣=␣30,␣*yp␣=␣30

理由：
一行目では、それぞれxの値、xpの格納しているアドレスのメモリの格納している
値、変数yの値、ポインタypの格納しているアドレスのメモリの格納している値であるので
実行結果のようになる。
その後、ポインタxpに、ポインタypの値を代入するので、xpとypには共に同じアドレスを格納し、
そのアドレスのメモリには20が格納されている。そして、そのアドレスのメモリの値を30に書き換えているので
実行結果のようになる。

2-3
このスワップ関数は値呼び出しである。したがって、関数が呼び出されると新しく変数x, yのメモリ領域が確保され、
そのメモリ領域に引数の値が代入される。したがって、関数を呼び出すと新たにできた変数x,yのメモリに格納されている値はスワップされるが、
呼び出し元の変数の格納されているメモリの値はスワップされない。

